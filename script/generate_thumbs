#!/usr/bin/env ruby

require 'bundler'
Bundler.setup

lib = File.expand_path('../../lib', __FILE__)
$:.unshift(lib) if !$:.include?(lib)

require 'fileutils'
require 'mini_magick'
require 'ruby-progressbar'
require 'thyme/db'
require 'thyme/photo'
require 'thyme/set'

MiniMagick.configure do |config|
  config.validate_on_create = false
  config.validate_on_write = false
end

module Thyme
  class Photo
    def generate_thumbs
      generate_thumb(path, '1000x1000', :big) # use original file
      generate_thumb(thumb_path(:big), '200x200', :small) # use big thumb
    end

    private

    def generate_thumb(src_path, size, suffix)
      return if File.exist?(thumb_path(suffix))

      image = MiniMagick::Image.read(File.open(src_path))

      image.combine_options do |c|
        c.auto_orient

        if suffix == :small
          c.resize("#{size}^")
          c.gravity('center')
          c.extent(size)
        elsif suffix == :big
          c.resize(size)
        end
      end

      if photo = Photo.first(path: src_path)
        photo.big_thumb_width = image.width
        photo.big_thumb_height = image.height
        photo.save
      end

      image.write(thumb_path(suffix))
    end
  end
end

FileUtils.mkdir_p Thyme::Photo::THUMBS_PATH

progress_bar = ProgressBar.create(
  title:  'thumb gen.',
  total:  Thyme::Photo.count,
  format: '%a |%b>%i| %p%% %t'
)

Thyme::Photo.all(order: :taken_at.desc).each do |photo|
  photo.generate_thumbs
  progress_bar.increment
end
